[{"path":"https://eitsupi.github.io/prqlr/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 prqlr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/articles/knitr.html","id":"output-formats","dir":"Articles","previous_headings":"","what":"Output formats","title":"Use PRQL with knitr","text":"can either output results actual query execution display SQL query compiled PRQL query.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/articles/knitr.html","id":"use-with-dbi-connections","dir":"Articles","previous_headings":"Output formats","what":"Use with {DBI} connections","title":"Use PRQL with knitr","text":"using database connections (set name DBI connection connection chunk option), PRQL code chunks pass output SQL knitr’s SQL engine behaves like SQL code chunks. , usage SQL code chunks. example, let’s render R Markdown file named test.Rmd following contents knitr::knit() function. rendering, Markdown file named test.md generated following contents. Note syntax highlighting Elm best PRQL, output code blocks marked elm. can changed setting lang chunk option.","code":"```{r} #| echo: false  library(DBI) library(prqlr) con <- dbConnect(RSQLite::SQLite(), \":memory:\") dbWriteTable(con, \"mtcars\", mtcars) ```  ```{prql} #| connection: con  from mtcars filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] take 3 ``` ```elm from mtcars filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] take 3 ```   | cyl|  mpg| mpg_int| |---:|----:|-------:| |   8| 18.7|      19| |   8| 14.3|      14| |   8| 16.4|      16|"},{"path":"https://eitsupi.github.io/prqlr/dev/articles/knitr.html","id":"without-database-connections","dir":"Articles","previous_headings":"Output formats","what":"Without database connections","title":"Use PRQL with knitr","text":"PRQL code chunks without connection option generate SQL code blocks. R Markdown file converted Markdown file .","code":"```{r} #| echo: false  library(prqlr) ```  ```{prql} from mtcars filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] take 3 ``` ```elm from mtcars filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] take 3 ```  ```sql SELECT   cyl,   mpg,   ROUND(mpg, 0) AS mpg_int FROM   mtcars WHERE   cyl > 6 LIMIT   3  -- Generated by PRQL compiler version:0.6.0 (https://prql-lang.org) ```"},{"path":"https://eitsupi.github.io/prqlr/dev/articles/knitr.html","id":"engine-options","dir":"Articles","previous_headings":"","what":"Engine options","title":"Use PRQL with knitr","text":"can pass options prql_compile() via chunk option engine-opts (engine.opts). Note format option always TRUE PRQL code chunks.","code":"```{r} #| echo: false  library(prqlr) ```  ## YAML-style  ```{prql} #| engine-opts: #|   target: sql.mssql #|   signature_comment: false  from mtcars take 3 ```  ## R-style  ```{prql engine.opts=list(target=\"sql.mssql\", signature_comment=FALSE)} from mtcars take 3 ```"},{"path":"https://eitsupi.github.io/prqlr/dev/articles/prqlr.html","id":"work-with-db","dir":"Articles","previous_headings":"","what":"Work with DB","title":"Use PRQL on R","text":"Using DBI package, can execute PRQL queries database. Since SQLite used via RSQLite, target option prql_compile() set \"sql.sqlite\". Available target names can found prql_get_targets() function.","code":"library(DBI)  # Create an ephemeral in-memory SQLite database con <- dbConnect(RSQLite::SQLite(), \":memory:\")  # Create a table inclueds `mtcars` data dbWriteTable(con, \"mtcars_table\", mtcars)  # Execute a PRQL query \" from mtcars_table filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] take 3 \" |>   prql_compile(\"sql.sqlite\") |>   dbGetQuery(con, statement = _) #>   cyl  mpg mpg_int #> 1   8 18.7      19 #> 2   8 14.3      14 #> 3   8 16.4      16"},{"path":"https://eitsupi.github.io/prqlr/dev/articles/prqlr.html","id":"work-with-r-data-frames","dir":"Articles","previous_headings":"","what":"Work with R Data Frames","title":"Use PRQL on R","text":"Using prqlr tidyquery package, can execute PRQL queries R Data Frames via dplyr. dplyr popular R package manipulating Data Frames, PRQL syntax similar dplyr syntax. Let’s run query aggregates Data Frame flights, contained nycflights13 package. query can written dplyr’s functions follows. Note dplyr queries can generated tidyquery::show_dplyr() function!","code":"library(tidyquery) library(nycflights13)  \" from flights filter (distance | in 200..300) filter air_time != null group [origin, dest] (   aggregate [     num_flts = count,     avg_delay = (average arr_delay | round 0)   ] ) sort [-origin, avg_delay] take 2 \" |>   prql_compile() |>   query() #> # A tibble: 2 × 4 #>   origin dest  num_flts avg_delay #>   <chr>  <chr>    <int>     <dbl> #> 1 LGA    BUF        122        -2 #> 2 LGA    PWM        273         2 library(dplyr, warn.conflicts = FALSE) library(nycflights13)  flights |>   filter(     distance |> between(200, 300),     !is.na(air_time)   ) |>   group_by(origin, dest) |>   summarise(     num_flts = n(),     avg_delay = mean(arr_delay, na.rm = TRUE) |> round(0),     .groups = \"drop\"   ) |>   arrange(desc(origin), avg_delay) |>   head(2) #> # A tibble: 2 × 4 #>   origin dest  num_flts avg_delay #>   <chr>  <chr>    <int>     <dbl> #> 1 LGA    BUF        122        -2 #> 2 LGA    PWM        273         2"},{"path":"https://eitsupi.github.io/prqlr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tatsuya Shima. Author, maintainer.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shima T (2023). prqlr: R Bindings 'prql-compiler' Rust Library. https://eitsupi.github.io/prqlr/, https://github.com/eitsupi/prqlr.","code":"@Manual{,   title = {prqlr: R Bindings for the 'prql-compiler' Rust Library},   author = {Tatsuya Shima},   year = {2023},   note = {https://eitsupi.github.io/prqlr/, https://github.com/eitsupi/prqlr}, }"},{"path":"https://eitsupi.github.io/prqlr/dev/index.html","id":"prqlr-","dir":"","previous_headings":"","what":"R Bindings for the prql-compiler Rust Library","title":"R Bindings for the prql-compiler Rust Library","text":"R bindings prql-compiler Rust library, powered extendr framework. version supports PRQL 0.6.0.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Bindings for the prql-compiler Rust Library","text":"Requires R 4.2.0 later. package can installed CRAN R-universe. available, binary package installed. source installation, Rust toolchain (Rust 1.65 later) must configured. Please check https://github.com/r-rust/hellorust repository Rust code R packages.","code":"# Install from CRAN install.packages(\"prqlr\") # Install from R-universe install.packages(\"prqlr\", repos = \"https://eitsupi.r-universe.dev\")"},{"path":"https://eitsupi.github.io/prqlr/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Bindings for the prql-compiler Rust Library","text":"PRQL’s pipelines can joined newline character (\\n), actual newlines addition |. Thanks tidyquery package, can even convert PRQL query SQL query dplyr query!","code":"library(prqlr) \"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_compile() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version:0.6.0 (https://prql-lang.org) \"from mtcars \\n filter cyl > 6 \\n select [cyl, mpg]\" |>   prql_compile() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version:0.6.0 (https://prql-lang.org) \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_compile() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version:0.6.0 (https://prql-lang.org) \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_compile() |>   tidyquery::show_dplyr() #> mtcars %>% #>   filter(cyl > 6) %>% #>   select(cyl, mpg)"},{"path":"https://eitsupi.github.io/prqlr/dev/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"R Bindings for the prql-compiler Rust Library","text":"Use rextendr::document() function generate R source code Rust source code src directory.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a PRQL query into a SQL query — prql_compile","title":"Compile a PRQL query into a SQL query — prql_compile","text":"Compile PRQL query SQL query","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_compile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a PRQL query into a SQL query — prql_compile","text":"","code":"prql_compile(   prql_query,   target = getOption(\"prqlr.target\", default = NULL),   format = getOption(\"prqlr.format\", default = TRUE),   signature_comment = getOption(\"prqlr.signature_comment\", default = TRUE) )  prql_to_sql(prql)"},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_compile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a PRQL query into a SQL query — prql_compile","text":"prql_query, prql PRQL query string. target compile target name use. specified, target contained query used. format logical flag. Whether format SQL query. signature_comment logical flag. Whether add signature comment output SQL query.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_compile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a PRQL query into a SQL query — prql_compile","text":"SQL query string","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_compile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compile a PRQL query into a SQL query — prql_compile","text":"prql_to_sql deprecated favor prql_compile.","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_compile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a PRQL query into a SQL query — prql_compile","text":"","code":"\"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_compile() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\\n\\n-- Generated by PRQL compiler version:0.6.0 (https://prql-lang.org)\\n\"  \"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_compile(format = FALSE, signature_comment = FALSE) #> [1] \"SELECT cyl, mpg FROM mtcars WHERE cyl > 6\"  \" from mtcars filter cyl > 6 select ![cyl] \" |>   prql_compile(\"sql.duckdb\") |>   cat() #> SELECT #>   * EXCLUDE (cyl) #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version:0.6.0 target:sql.duckdb (https://prql-lang.org)  # If the `target` argument is `NULL` (default) or `NA` or `\"sql.any\"`, # the target specified in the header of the query will be used. \" prql target:sql.duckdb  from mtcars filter cyl > 6 select ![cyl] \" |>   prql_compile() |>   cat() #> SELECT #>   * EXCLUDE (cyl) #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version:0.6.0 (https://prql-lang.org)"},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_get_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available target names — prql_get_targets","title":"Get available target names — prql_get_targets","text":"Get available target names target option prql_compile() function.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_get_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available target names — prql_get_targets","text":"","code":"prql_get_targets()"},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_get_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available target names — prql_get_targets","text":"character vector target names.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_get_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available target names — prql_get_targets","text":"","code":"prql_get_targets() #>  [1] \"sql.any\"        \"sql.ansi\"       \"sql.bigquery\"   \"sql.clickhouse\" #>  [5] \"sql.duckdb\"     \"sql.generic\"    \"sql.hive\"       \"sql.mssql\"      #>  [9] \"sql.mysql\"      \"sql.postgres\"   \"sql.sqlite\"     \"sql.snowflake\""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_version.html","id":null,"dir":"Reference","previous_headings":"","what":"prql-compiler's version — prql_version","title":"prql-compiler's version — prql_version","text":"prql-compiler's version","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prql-compiler's version — prql_version","text":"","code":"prql_version()"},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prql-compiler's version — prql_version","text":"numeric_version version built-prql-compiler.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/reference/prql_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"prql-compiler's version — prql_version","text":"","code":"prql_version() #> [1] ‘0.6.0’"},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prqlr (development version)","text":"Based prql-compiler 0.6.0 (#97, #99)","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"prqlr (development version)","text":"new compile target \"sql.\" can specified prql_compile()’s target option. traditional unspecified (NULL) target respect using target specified header query target. (#97)","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"prqlr-021","dir":"Changelog","previous_headings":"","what":"prqlr 0.2.1","title":"prqlr 0.2.1","text":"CRAN release: 2023-02-28","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"prqlr 0.2.1","text":"Thanks new version extendr libR-sys, prqlr can now installed arm64 Linux. (#90) Now buildable Rust version 1.60 (#94)","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"prqlr-020","dir":"Changelog","previous_headings":"","what":"prqlr 0.2.0","title":"prqlr 0.2.0","text":"CRAN release: 2023-02-18","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prqlr 0.2.0","text":"Based prql-compiler 0.5.1 (#71, #77, #86) SQL dialects must specified sql. prefix targeted (e.g. \"duckdb\" -> \"sql.duckdb\"). (#71) prql_available_dialects() renamed prql_get_targets(). (#85)","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"prqlr 0.2.0","text":"prqlr registers prql engine knitr loaded. See vignette vignette(\"knitr\", \"prqlr\") details. (#53, #57, #62) New function prql_version() returns built-prql-compiler version. (#51) prql_compile()’s options can set options(). (#70)","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"other-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Other improvements","title":"prqlr 0.2.0","text":"prql_compile() longer leaks memory error occurs. (Thanks @sorhawell, #46, #52)","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"prqlr-010","dir":"Changelog","previous_headings":"","what":"prqlr 0.1.0","title":"prqlr 0.1.0","text":"CRAN release: 2023-01-20","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prqlr 0.1.0","text":"Based prql-compiler 0.4.1 prql_compile() implemented prql_to_sql() deprecated. json_to_prql() prql_to_json() removed.","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"other-improvements-0-1-0","dir":"Changelog","previous_headings":"","what":"Other improvements","title":"prqlr 0.1.0","text":"CARGO_HOME now set temporary directory installation environment variable NOT_CRAN set true avoid writing HOME. (#25, #27, #29)","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"enhancements-0-0-4","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"prqlr 0.0.4","text":"Change Rust toolchain Windows GNU MSVC. (#22)","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"breaking-changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prqlr 0.0.3","text":"Based prql-compiler 0.3.1 format_prql() function removed.","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"enhancements-0-0-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"prqlr 0.0.2","text":"Based prql-compiler 0.2.11","code":""},{"path":"https://eitsupi.github.io/prqlr/dev/news/index.html","id":"prqlr-001","dir":"Changelog","previous_headings":"","what":"prqlr 0.0.1","title":"prqlr 0.0.1","text":"Based prql-compiler 0.2.9","code":""}]
