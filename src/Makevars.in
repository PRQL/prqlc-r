TARGET = @TARGET@
PROFILE = @PROFILE@

LIBNAME = libprqlr.a
TARGET_DIR = $(CURDIR)/rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/$(subst dev,debug,$(PROFILE))
STATLIB = $(LIBDIR)/$(LIBNAME)
PKG_LIBS = -L$(LIBDIR) -lprqlr

CARGO_BUILD_ARGS = --lib \
	--profile="$(PROFILE)" \
	--manifest-path="$(CURDIR)/rust/Cargo.toml" \
	--target-dir="$(TARGET_DIR)" \
	--target=$(TARGET)

CARGOTMP = $(CURDIR)/.cargo
VENDOR_DIR = $(CURDIR)/rust/vendor

.PHONY: all
all: cleanup

$(SHLIB): $(STATLIB)

$(STATLIB): remove-prev
	if [ -f "$(CURDIR)/../tools/$(LIBNAME)" ]; then \
		mkdir -p "$(LIBDIR)" ; \
		mv "$(CURDIR)/../tools/$(LIBNAME)" "$(STATLIB)" ; \
		exit 0; \
	fi && \
	if [ -f "$(CURDIR)/rust/vendor.tar.xz" ]; then \
		mkdir -p "$(VENDOR_DIR)" && \
		$(TAR) --extract --xz --file "$(CURDIR)/rust/vendor.tar.xz" -C "$(VENDOR_DIR)" && \
		mkdir -p "$(CARGOTMP)" && \
		cp "$(CURDIR)/rust/vendor-config.toml" "$(CARGOTMP)/config.toml"; \
	fi && \
	if [ "$(NOT_CRAN)" != "true" ]; then \
		export CARGO_HOME="$(CARGOTMP)"; \
		export CARGO_BUILD_JOBS=2; \
	fi && \
	export PATH="$(PATH):$(HOME)/.cargo/bin" && \
		if [ "$(TARGET)" != "wasm32-unknown-emscripten" ]; then \
			cargo build $(CARGO_BUILD_ARGS); \
		else \
			export CC="$(CC)" && \
			export CFLAGS="$(CFLAGS)" && \
			export CARGO_PROFILE_DEV_PANIC="abort" && \
			export CARGO_PROFILE_RELEASE_PANIC="abort" && \
			cargo +nightly build $(CARGO_BUILD_ARGS) -Zbuild-std=panic_abort,std; \
		fi

.PHONY: remove-prev
# Remove previous build artifacts
remove-prev:
	rm -f "$(STATLIB)"

.PHONY: cleanup
# Clean up files that may cause warnings in R CMD check on CRAN just after the build
cleanup: $(SHLIB)
	rm -Rf "$(CARGOTMP)" "$(VENDOR_DIR)"
	if [ "$(NOT_CRAN)" != "true" ]; then \
		rm -Rf "$(STATLIB)" "$(LIBDIR)/build"; \
	fi

.PHONY: clean
clean:
	rm -Rf "$(SHLIB)" "$(STATLIB)" "$(OBJECTS)" "$(TARGET_DIR)"
