TARGET ?= @RUST_TARGET@
PRQLR_PROFILE ?= release
PRQLR_FEATURES ?=

LIBNAME = libprqlr.a
TARGET_DIR = $(CURDIR)/rust/target
LIBDIR = $(TARGET_DIR)/$(TARGET)/$(PRQLR_PROFILE)
STATLIB = $(LIBDIR)/$(LIBNAME)
PKG_LIBS = -L$(LIBDIR) -lprqlr

.PHONY: all
all: C_clean $(SHLIB)

$(SHLIB): $(STATLIB)
	if [ "$(NOT_CRAN)" != "true" ]; then \
		rm -Rf "$(STATLIB)" "$(CARGOTMP)" "$(VENDOR_DIR)" "$(LIBDIR)/build"; \
	fi

CARGOTMP = $(CURDIR)/.cargo
VENDOR_DIR = $(CURDIR)/rust/vendor

$(STATLIB):
	if [ -f "$(CURDIR)/../tools/$(LIBNAME)" ]; then \
		mkdir -p "$(LIBDIR)" ; \
		mv "$(CURDIR)/../tools/$(LIBNAME)" "$(STATLIB)" ; \
		exit 0; \
	fi && \
	if [ -f "$(CURDIR)/rust/vendor.tar.xz" ]; then \
		mkdir -p "$(VENDOR_DIR)" && \
		$(TAR) --extract --xz --file "$(CURDIR)/rust/vendor.tar.xz" -C "$(VENDOR_DIR)" && \
		mkdir -p "$(CARGOTMP)" && \
		cp "$(CURDIR)/rust/vendor-config.toml" "$(CARGOTMP)/config.toml"; \
	fi && \
	if [ "$(NOT_CRAN)" != "true" ]; then \
		export CARGO_HOME="$(CARGOTMP)"; \
		export CARGO_BUILD_JOBS=2; \
	fi && \
	export PATH="$(PATH):$(HOME)/.cargo/bin" && \
	if [ "$(TARGET)" != "wasm32-unknown-emscripten" ]; then \
	  cargo build --lib --manifest-path="$(CURDIR)/rust/Cargo.toml" --target-dir "$(TARGET_DIR)" --target="$(TARGET)" \
	    --profile="$(PRQLR_PROFILE)" --features="$(PRQLR_FEATURES)"; \
	else \
	  export CC="$(CC)" && \
	  export CFLAGS="$(CFLAGS)" && \
	  export CARGO_PROFILE_RELEASE_PANIC="abort" && \
	  cargo +nightly build --lib --manifest-path="$(CURDIR)/rust/Cargo.toml" --target-dir "$(TARGET_DIR)" --target="$(TARGET)" \
	    --profile="$(PRQLR_PROFILE)" --features="$(PRQLR_FEATURES)" -Zbuild-std=panic_abort,std; \
	fi

.PHONY: C_clean
C_clean:
	rm -Rf "$(SHLIB)" "$(STATLIB)" "$(OBJECTS)"

.PHONY: clean
clean:
	rm -Rf "$(SHLIB)" "$(STATLIB)" "$(OBJECTS)" "$(TARGET_DIR)"
