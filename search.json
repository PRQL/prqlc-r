[{"path":"https://eitsupi.github.io/prqlr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 prqlr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eitsupi.github.io/prqlr/articles/prqlr.html","id":"work-with-db","dir":"Articles","previous_headings":"","what":"Work with DB","title":"Use PRQL on R","text":"Using DBI package, can execute PRQL queries database.","code":"library(DBI)  # Create an ephemeral in-memory RSQLite database con <- dbConnect(RSQLite::SQLite(), \":memory:\")  dbWriteTable(con, \"mtcars_table\", mtcars)  \"from mtcars_table filter cyl == 4\" |>   prql_to_sql() |>   dbGetQuery(con, statement = _) #>     mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> 1  22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> 2  24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> 3  22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> 4  32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> 5  30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> 6  33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> 7  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> 8  27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> 9  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> 10 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> 11 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://eitsupi.github.io/prqlr/articles/prqlr.html","id":"work-with-r-data-frame","dir":"Articles","previous_headings":"","what":"Work with R data.frame","title":"Use PRQL on R","text":"Using tidyquery package, can execute PRQL queries R data.frame. Note PRQL syntax similar dplyr syntax. dplyr popular R package manipulating data.","code":"library(tidyquery) library(nycflights13)  \" from flights join side:left planes [tailnum] filter (distance | in 200..300) filter null != air_time group [origin, dest] (   aggregate [     num_flts = count,     num_seats = (sum seats | round 0),     avg_delay = (average arr_delay | round 0)   ] ) filter num_flts > 3000 sort [-num_seats, avg_delay] take 2 \" |>   prql_to_sql() |>   query() #> # A tibble: 2 × 5 #>   origin dest  num_flts num_seats avg_delay #>   <chr>  <chr>    <int>     <dbl>     <dbl> #> 1 LGA    DCA       4468    712643         6 #> 2 EWR    BOS       5247    611192         5 library(dplyr, warn.conflicts = FALSE) library(nycflights13)  flights |>   left_join(planes, by = \"tailnum\") |>   filter(     distance |> between(200, 300),     !is.na(air_time)   ) |>   group_by(origin, dest) |>   summarise(     num_flts = n(),     num_seats = sum(seats, na.rm = TRUE) |> round(0),     avg_delay = mean(arr_delay, na.rm = TRUE) |> round(0),     .groups = \"drop\"   ) |>   filter(num_flts > 3000) |>   arrange(desc(num_seats), avg_delay) |>   head(2) #> # A tibble: 2 × 5 #>   origin dest  num_flts num_seats avg_delay #>   <chr>  <chr>    <int>     <dbl>     <dbl> #> 1 LGA    DCA       4468    712643         6 #> 2 EWR    BOS       5247    611192         5"},{"path":"https://eitsupi.github.io/prqlr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tatsuya Shima. Author, maintainer.","code":""},{"path":"https://eitsupi.github.io/prqlr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shima T (2022). prqlr: R bindings prql-compiler. https://eitsupi.github.io/prqlr, https://github.com/eitsupi/prqlr.","code":"@Manual{,   title = {prqlr: R bindings for the prql-compiler},   author = {Tatsuya Shima},   year = {2022},   note = {https://eitsupi.github.io/prqlr, https://github.com/eitsupi/prqlr}, }"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"prqlr","dir":"","previous_headings":"","what":"R bindings for the prql-compiler","title":"R bindings for the prql-compiler","text":"R bindings prql-compiler Rust library.","code":""},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R bindings for the prql-compiler","text":"TBD","code":""},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R bindings for the prql-compiler","text":"PRQL’s pipelines can joined \\n, newline character, actual newlines addition |.","code":"library(prqlr) \"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_to_sql() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\" \"from mtcars \\n filter cyl > 6 \\n select [cyl, mpg]\" |>   prql_to_sql() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\" \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_to_sql() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a PRQL string into a SQL string — prql_to_sql","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"Compile PRQL string SQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"","code":"prql_to_sql(prql)"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"prql PRQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"SQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"","code":"\"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_to_sql() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\""}]
