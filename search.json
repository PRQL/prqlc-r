[{"path":"https://eitsupi.github.io/prqlr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 prqlr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eitsupi.github.io/prqlr/articles/prqlr.html","id":"work-with-db","dir":"Articles","previous_headings":"","what":"Work with DB","title":"Use PRQL on R","text":"Using DBI package, can execute PRQL queries database. SQLite used via RSQLite, dialect header set top query.","code":"library(DBI)  # Create an ephemeral in-memory RSQLite database con <- dbConnect(RSQLite::SQLite(), \":memory:\")  dbWriteTable(con, \"mtcars_table\", mtcars)  \" prql dialect:sqlite  from mtcars_table filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] \" |>   prql_to_sql() |>   dbGetQuery(con, statement = _) #>    cyl  mpg mpg_int #> 1    8 18.7      19 #> 2    8 14.3      14 #> 3    8 16.4      16 #> 4    8 17.3      17 #> 5    8 15.2      15 #> 6    8 10.4      10 #> 7    8 10.4      10 #> 8    8 14.7      15 #> 9    8 15.5      16 #> 10   8 15.2      15 #> 11   8 13.3      13 #> 12   8 19.2      19 #> 13   8 15.8      16 #> 14   8 15.0      15"},{"path":"https://eitsupi.github.io/prqlr/articles/prqlr.html","id":"work-with-r-data-frame","dir":"Articles","previous_headings":"","what":"Work with R data.frame","title":"Use PRQL on R","text":"Using tidyquery package, can execute PRQL queries R ?data.frame. Let’s run query joins aggregates two data.frames, flights planes, contained nycflights13 package. Note PRQL syntax similar dplyr syntax. dplyr popular R package manipulating data.","code":"library(tidyquery) library(nycflights13)  \" from flights join side:left planes [==tailnum] filter (distance | in 200..300) filter air_time != null group [origin, dest] (   aggregate [     num_flts = count,     num_seats = (sum seats | round 0),     avg_delay = (average arr_delay | round 0)   ] ) sort [-num_seats, avg_delay] take 2 \" |>   prql_to_sql() |>   query() #> # A tibble: 2 × 5 #>   origin dest  num_flts num_seats avg_delay #>   <chr>  <chr>    <int>     <dbl>     <dbl> #> 1 LGA    DCA       4468    712643         6 #> 2 EWR    BOS       5247    611192         5 library(dplyr, warn.conflicts = FALSE) library(nycflights13)  flights |>   left_join(planes, by = \"tailnum\") |>   filter(     distance |> between(200, 300),     !is.na(air_time)   ) |>   group_by(origin, dest) |>   summarise(     num_flts = n(),     num_seats = sum(seats, na.rm = TRUE) |> round(0),     avg_delay = mean(arr_delay, na.rm = TRUE) |> round(0),     .groups = \"drop\"   ) |>   arrange(desc(num_seats), avg_delay) |>   head(2) #> # A tibble: 2 × 5 #>   origin dest  num_flts num_seats avg_delay #>   <chr>  <chr>    <int>     <dbl>     <dbl> #> 1 LGA    DCA       4468    712643         6 #> 2 EWR    BOS       5247    611192         5"},{"path":"https://eitsupi.github.io/prqlr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tatsuya Shima. Author, maintainer.","code":""},{"path":"https://eitsupi.github.io/prqlr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shima T (2022). prqlr: R Bindings 'prql-compiler' Rust Library. https://eitsupi.github.io/prqlr/, https://github.com/eitsupi/prqlr.","code":"@Manual{,   title = {prqlr: R Bindings for the 'prql-compiler' Rust Library},   author = {Tatsuya Shima},   year = {2022},   note = {https://eitsupi.github.io/prqlr/, https://github.com/eitsupi/prqlr}, }"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"prqlr","dir":"","previous_headings":"","what":"R Bindings for the prql-compiler Rust Library","title":"R Bindings for the prql-compiler Rust Library","text":"R bindings prql-compiler Rust library, powered extendr framework.","code":""},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Bindings for the prql-compiler Rust Library","text":"Requires R 4.2.0 later. package can installed R-universe. available, binary package installed. source installation, Rust toolchain must configured. Please check https://github.com/r-rust/hellorust repository.","code":"install.packages(\"prqlr\", repos = \"https://eitsupi.r-universe.dev\")"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Bindings for the prql-compiler Rust Library","text":"PRQL’s pipelines can joined newline character (\\n), actual newlines addition |. Thanks tidyquery package, can even convert PRQL query SQL query dplyr query!","code":"library(prqlr) \"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_to_sql() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 \"from mtcars \\n filter cyl > 6 \\n select [cyl, mpg]\" |>   prql_to_sql() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_to_sql() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_to_sql() |>   tidyquery::show_dplyr() #> mtcars %>% #>   filter(cyl > 6) %>% #>   select(cyl, mpg)"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"R Bindings for the prql-compiler Rust Library","text":"Use rextendr::document() function generate R source code Rust source code src directory.","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/json_to_prql.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON AST back to a PRQL string — json_to_prql","title":"Convert a JSON AST back to a PRQL string — json_to_prql","text":"Convert JSON AST back PRQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/json_to_prql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON AST back to a PRQL string — json_to_prql","text":"","code":"json_to_prql(json)"},{"path":"https://eitsupi.github.io/prqlr/reference/json_to_prql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON AST back to a PRQL string — json_to_prql","text":"json JSON string AST","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/json_to_prql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON AST back to a PRQL string — json_to_prql","text":"PRQL string","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/reference/json_to_prql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON AST back to a PRQL string — json_to_prql","text":"","code":"\"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_to_json() |>   json_to_prql() |>   cat() #> from mtcars #> filter cyl > 6 #> select [ #>   cyl, #>   mpg, #> ] #>  #>"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a PRQL string into a JSON version of the Query — prql_to_json","title":"Compile a PRQL string into a JSON version of the Query — prql_to_json","text":"Compile PRQL string JSON version Query","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a PRQL string into a JSON version of the Query — prql_to_json","text":"","code":"prql_to_json(prql)"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a PRQL string into a JSON version of the Query — prql_to_json","text":"prql PRQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a PRQL string into a JSON version of the Query — prql_to_json","text":"JSON string AST","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a PRQL string into a JSON version of the Query — prql_to_json","text":"","code":"\"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_to_json() |>   cat() #> [{\"Pipeline\":{\"Pipeline\":{\"exprs\":[{\"FuncCall\":{\"name\":{\"Ident\":[\"from\"]},\"args\":[{\"Ident\":[\"mtcars\"]}],\"named_args\":{}}},{\"FuncCall\":{\"name\":{\"Ident\":[\"filter\"]},\"args\":[{\"Binary\":{\"left\":{\"Ident\":[\"cyl\"]},\"op\":\"Gt\",\"right\":{\"Literal\":{\"Integer\":6}}}}],\"named_args\":{}}},{\"FuncCall\":{\"name\":{\"Ident\":[\"select\"]},\"args\":[{\"List\":[{\"Ident\":[\"cyl\"]},{\"Ident\":[\"mpg\"]}]}],\"named_args\":{}}}]}}}]"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a PRQL string into a SQL string — prql_to_sql","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"Compile PRQL string SQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"","code":"prql_to_sql(prql)"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"prql PRQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"SQL string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_to_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a PRQL string into a SQL string — prql_to_sql","text":"","code":"\"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_to_sql() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\"  \" from mtcars filter cyl > 6 select [cyl, mpg] \" |>   prql_to_sql() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6"},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"prqlr-004","dir":"Changelog","previous_headings":"","what":"prqlr 0.0.4","title":"prqlr 0.0.4","text":"Change Rust toolchain Windows GNU MSVC. (#22) CARGO_HOME now set temporary directory installation environment variable NOT_CRAN set true avoid writing HOME. (#25, #27)","code":""},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"prqlr-003","dir":"Changelog","previous_headings":"","what":"prqlr 0.0.3","title":"prqlr 0.0.3","text":"Based prql-compiler v0.3.1 format_prql function removed.","code":""},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"prqlr-002","dir":"Changelog","previous_headings":"","what":"prqlr 0.0.2","title":"prqlr 0.0.2","text":"Based prql-compiler v0.2.11","code":""},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"prqlr-001","dir":"Changelog","previous_headings":"","what":"prqlr 0.0.1","title":"prqlr 0.0.1","text":"Based prql-compiler v0.2.9","code":""}]
