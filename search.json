[{"path":"https://eitsupi.github.io/prqlr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 prqlr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eitsupi.github.io/prqlr/articles/prqlr.html","id":"work-with-db","dir":"Articles","previous_headings":"","what":"Work with DB","title":"Use PRQL on R","text":"Using DBI package, can execute PRQL queries database. Since SQLite used via RSQLite, dialect option set \"sqlite\". Available dialect names can found prql_available_dialects() function.","code":"library(DBI)  # Create an ephemeral in-memory RSQLite database con <- dbConnect(RSQLite::SQLite(), \":memory:\")  dbWriteTable(con, \"mtcars_table\", mtcars)  \" from mtcars_table filter cyl > 6 select [cyl, mpg] derive [mpg_int = round 0 mpg] take 3 \" |>   prql_compile(\"sqlite\") |>   dbGetQuery(con, statement = _) #>   cyl  mpg mpg_int #> 1   8 18.7      19 #> 2   8 14.3      14 #> 3   8 16.4      16"},{"path":"https://eitsupi.github.io/prqlr/articles/prqlr.html","id":"work-with-r-data-frame","dir":"Articles","previous_headings":"","what":"Work with R data.frame","title":"Use PRQL on R","text":"Using tidyquery package, can execute PRQL queries R ?data.frame. Let’s run query aggregates data.frame flights, contained nycflights13 package. + Note PRQL syntax similar dplyr syntax. dplyr popular R package manipulating data.","code":"library(tidyquery) library(nycflights13)  \" from flights filter (distance | in 200..300) filter air_time != null group [origin, dest] (   aggregate [     num_flts = count,     avg_delay = (average arr_delay | round 0)   ] ) sort [-origin, avg_delay] take 2 \" |>   prql_compile() |>   query() #> # A tibble: 2 × 4 #>   origin dest  num_flts avg_delay #>   <chr>  <chr>    <int>     <dbl> #> 1 LGA    BUF        122        -2 #> 2 LGA    PWM        273         2 library(dplyr, warn.conflicts = FALSE) library(nycflights13)  flights |>   filter(     distance |> between(200, 300),     !is.na(air_time)   ) |>   group_by(origin, dest) |>   summarise(     num_flts = n(),     avg_delay = mean(arr_delay, na.rm = TRUE) |> round(0),     .groups = \"drop\"   ) |>   arrange(desc(origin), avg_delay) |>   head(2) #> # A tibble: 2 × 4 #>   origin dest  num_flts avg_delay #>   <chr>  <chr>    <int>     <dbl> #> 1 LGA    BUF        122        -2 #> 2 LGA    PWM        273         2"},{"path":"https://eitsupi.github.io/prqlr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tatsuya Shima. Author, maintainer.","code":""},{"path":"https://eitsupi.github.io/prqlr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shima T (2023). prqlr: R Bindings 'prql-compiler' Rust Library. https://eitsupi.github.io/prqlr/, https://github.com/eitsupi/prqlr.","code":"@Manual{,   title = {prqlr: R Bindings for the 'prql-compiler' Rust Library},   author = {Tatsuya Shima},   year = {2023},   note = {https://eitsupi.github.io/prqlr/, https://github.com/eitsupi/prqlr}, }"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"prqlr","dir":"","previous_headings":"","what":"R Bindings for the prql-compiler Rust Library","title":"R Bindings for the prql-compiler Rust Library","text":"R bindings prql-compiler Rust library, powered extendr framework.","code":""},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Bindings for the prql-compiler Rust Library","text":"Requires R 4.2.0 later. package can installed R-universe. available, binary package installed. source installation, Rust toolchain must configured. Please check https://github.com/r-rust/hellorust repository.","code":"install.packages(\"prqlr\", repos = \"https://eitsupi.r-universe.dev\")"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Bindings for the prql-compiler Rust Library","text":"PRQL’s pipelines can joined newline character (\\n), actual newlines addition |. Thanks tidyquery package, can even convert PRQL query SQL query dplyr query!","code":"library(prqlr) \"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_compile() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version 0.4.0 (https://prql-lang.org) \"from mtcars \\n filter cyl > 6 \\n select [cyl, mpg]\" |>   prql_compile() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version 0.4.0 (https://prql-lang.org) \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_compile() |>   cat() #> SELECT #>   cyl, #>   mpg #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version 0.4.0 (https://prql-lang.org) \"from mtcars filter cyl > 6 select [cyl, mpg]\" |>   prql_compile() |>   tidyquery::show_dplyr() #> mtcars %>% #>   filter(cyl > 6) %>% #>   select(cyl, mpg)"},{"path":"https://eitsupi.github.io/prqlr/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"R Bindings for the prql-compiler Rust Library","text":"Use rextendr::document() function generate R source code Rust source code src directory.","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_available_dialects.html","id":null,"dir":"Reference","previous_headings":"","what":"Available dialect names — prql_available_dialects","title":"Available dialect names — prql_available_dialects","text":"Available dialects dialect option prql_compile() function.","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_available_dialects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available dialect names — prql_available_dialects","text":"","code":"prql_available_dialects()"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_available_dialects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available dialect names — prql_available_dialects","text":"character vector dialect names.","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_available_dialects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available dialect names — prql_available_dialects","text":"","code":"prql_available_dialects() #>  [1] \"ansi\"       \"bigquery\"   \"clickhouse\" \"generic\"    \"hive\"       #>  [6] \"mssql\"      \"mysql\"      \"postgres\"   \"sqlite\"     \"snowflake\"  #> [11] \"duckdb\""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a PRQL query into a SQL query — prql_compile","title":"Compile a PRQL query into a SQL query — prql_compile","text":"Compile PRQL query SQL query","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_compile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a PRQL query into a SQL query — prql_compile","text":"","code":"prql_compile(prql_query, dialect = NA, format = TRUE, signature_comment = TRUE)  prql_to_sql(prql)"},{"path":"https://eitsupi.github.io/prqlr/reference/prql_compile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a PRQL query into a SQL query — prql_compile","text":"prql_query, prql PRQL query string. dialect SQL dialect name use. specified, dialect contained query used. format logical flag. Whether format SQL query. signature_comment logical flag. Whether add signature comment output SQL query.","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_compile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a PRQL query into a SQL query — prql_compile","text":"SQL query string","code":""},{"path":"https://eitsupi.github.io/prqlr/reference/prql_compile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compile a PRQL query into a SQL query — prql_compile","text":"prql_to_sql deprecated favor prql_compile.","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/reference/prql_compile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile a PRQL query into a SQL query — prql_compile","text":"","code":"\"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_compile() #> [1] \"SELECT\\n  cyl,\\n  mpg\\nFROM\\n  mtcars\\nWHERE\\n  cyl > 6\\n\\n-- Generated by PRQL compiler version 0.4.0 (https://prql-lang.org)\\n\"  \"from mtcars | filter cyl > 6 | select [cyl, mpg]\" |>   prql_compile(format = FALSE, signature_comment = FALSE) #> [1] \"SELECT cyl, mpg FROM mtcars WHERE cyl > 6\"  \" from mtcars filter cyl > 6 select ![cyl] \" |>   prql_compile(\"duckdb\") |>   cat() #> SELECT #>   * EXCLUDE (cyl) #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version 0.4.0 (https://prql-lang.org)  # Target dialect can also be written in the PRQL query. \" prql target:sql.duckdb  from mtcars filter cyl > 6 select ![cyl] \" |>   prql_compile() |>   cat() #> SELECT #>   * EXCLUDE (cyl) #> FROM #>   mtcars #> WHERE #>   cyl > 6 #>  #> -- Generated by PRQL compiler version 0.4.0 (https://prql-lang.org)"},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prqlr (development version)","text":"Based prql-compiler v0.4.0 prql_compile() implemented prql_to_sql() deprecated. json_to_prql() prql_to_json() removed.","code":""},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"other-improvements-development-version","dir":"Changelog","previous_headings":"","what":"Other improvements","title":"prqlr (development version)","text":"CARGO_HOME now set temporary directory installation environment variable NOT_CRAN set true avoid writing HOME. (#25, #27, #29)","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"enhancements-0-0-4","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"prqlr 0.0.4","text":"Change Rust toolchain Windows GNU MSVC. (#22)","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"breaking-changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"prqlr 0.0.3","text":"Based prql-compiler v0.3.1 format_prql() function removed.","code":""},{"path":[]},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"enhancements-0-0-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"prqlr 0.0.2","text":"Based prql-compiler v0.2.11","code":""},{"path":"https://eitsupi.github.io/prqlr/news/index.html","id":"prqlr-001","dir":"Changelog","previous_headings":"","what":"prqlr 0.0.1","title":"prqlr 0.0.1","text":"Based prql-compiler v0.2.9","code":""}]
