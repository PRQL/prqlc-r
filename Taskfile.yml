version: "3"

env:
  NOT_CRAN: "true"
  LIBPRQLR_BUILD: "true"

vars:
  MANIFEST: src/rust/Cargo.toml
  CARGO_LOCK: src/rust/Cargo.lock
  R_SOURCE: R/*
  VIGNETTES: vignettes/**/*.Rmd
  RUST_SOURCE: src/rust/src/**/*.rs

tasks:
  setup-dev:
    desc: Install tools for development.
    deps:
      - install-r-tools
      - install-rust-tools

  install-r-tools:
    internal: true
    env:
      PKG_SYSREQS: FALSE
    desc: Install R packages for development.
    cmds:
      - Rscript -e
        'pak::repo_add("https://cloud.r-project.org/");
        pak::local_install_deps(dependencies = c("all", "Config/Needs/dev", "Config/Needs/website"))'

  install-rust-tools:
    internal: true
    desc: Install Rust packages for development.
    cmds:
      - cargo install cargo-license cargo-outdated savvy-cli

  cargo-update:
    desc: Update the lock files.
    sources:
      - "{{.MANIFEST}}"
    generates:
      - "{{.CARGO_LOCK}}"
    cmds:
      - cargo outdated --manifest-path "{{.MANIFEST}}"

  build-vendor-sources:
    desc: Vendor Rust sources.
    deps:
      - cargo-update
    sources:
      - "{{.CARGO_LOCK}}"
      - dev/vendoring.R
    generates:
      - src/rust/vendor.tar.xz
    cmds:
      - Rscript dev/vendoring.R

  build-lib-sums:
    desc: Build lib-sums.tsv.
    sources:
      - dev/generate-lib-sums.R
      - tools/prep-lib.R
      - DESCRIPTION
      - "{{.CARGO_LOCK}}"
    generates:
      - tools/lib-sums.tsv
    cmds:
      - Rscript dev/generate-lib-sums.R

  build-all:
    desc: Build the R package, generate documents, run all tests, and update files.
    deps:
      - build-lib-sums
      - build-documents
    cmds:
      - task: test-all
      - task: build-license-note
      - task: build-authors
      - task: build-readme

  test-all:
    desc: Run all tests.
    cmds:
      - task: test-source
      - task: test-examples
      - task: test-vignettes

  test-source:
    desc: Run all tests for source.
    internal: true
    sources:
      - tests/**/*
      - "{{.R_SOURCE}}"
      - src/Makevars*
      - configure*
      - "{{.MANIFEST}}"
      - "{{.CARGO_LOCK}}"
      - "{{.RUST_SOURCE}}"
    deps:
      - build-wrappers
    cmds:
      - Rscript -e 'devtools::test()'

  test-examples:
    desc: Check if examples can be run.
    internal: true
    sources:
      - "{{.R_SOURCE}}"
      - src/Makevars*
      - configure*
      - "{{.MANIFEST}}"
      - "{{.CARGO_LOCK}}"
      - "{{.RUST_SOURCE}}"
    deps:
      - build-wrappers
    cmds:
      - Rscript -e 'devtools::run_examples(document = FALSE)'

  test-vignettes:
    desc: Check if vignettes can be rendered.
    internal: true
    sources:
      - "{{.VIGNETTES}}"
      - "{{.R_SOURCE}}"
      - src/Makevars*
      - configure*
      - "{{.MANIFEST}}"
      - "{{.CARGO_LOCK}}"
      - "{{.RUST_SOURCE}}"
    deps:
      - build-wrappers
    cmds:
      - Rscript -e
        'devtools::load_all();
        list.files("vignettes/", pattern = r"(\.Rmd$)", recursive = TRUE, full.names = TRUE) |>
        purrr::walk(\(x) rmarkdown::render(x, output_dir = tempdir()))'

  build-documents:
    desc: Build the R package and generate documents.
    internal: true
    sources:
      - "{{.R_SOURCE}}"
    generates:
      - man/*.Rd
    status:
      - Rscript -e 'if (desc::desc_get("RoxygenNote") < packageVersion("roxygen2")) quit(status = 1)'
    deps:
      - build-wrappers
    cmds:
      - Rscript -e 'devtools::document()'

  build-wrappers:
    internal: true
    desc: Build the Rust wrappers.
    sources:
      - src/Makevars*
      - configure*
      - "{{.MANIFEST}}"
      - "{{.CARGO_LOCK}}"
      - "{{.RUST_SOURCE}}"
    deps:
      - build-vendor-sources
    generates:
      - R/wrappers.R
    cmds:
      - savvy-cli update .

  build-license-note:
    internal: true
    desc: Build LICENSE.note
    sources:
      - "{{.CARGO_LOCK}}"
      - dev/generate-license-note.R
    generates:
      - LICENSE.note
    cmds:
      - Rscript dev/generate-license-note.R

  build-authors:
    internal: true
    desc: Build inst/AUTHORS
    sources:
      - "{{.CARGO_LOCK}}"
      - dev/generate-authors.R
    generates:
      - inst/AUTHORS
    cmds:
      - Rscript dev/generate-authors.R

  build-readme:
    internal: true
    desc: Build README.md
    sources:
      - README.Rmd
      - "{{.R_SOURCE}}"
      - src/Makevars*
      - configure*
      - "{{.MANIFEST}}"
      - "{{.CARGO_LOCK}}"
      - "{{.RUST_SOURCE}}"
      - tools/lib-sums.tsv
    generates:
      - README.md
    deps:
      - build-wrappers
    cmds:
      - Rscript -e
        'devtools::load_all();
        rmarkdown::render(input = "README.Rmd", output_file = "README.md")'

  test-snapshot-accept:
    desc: Accept all test snapshots. (Shortcut to accept snapshots after running tests)
    cmds:
      - Rscript -e 'testthat::snapshot_accept()'

  lint-and-format:
    desc: Lint and auto-format R and Rust code.
    deps:
      - lint-and-format-r
      - lint-and-format-rust

  lint-and-format-r:
    internal: true
    desc: Lint and auto-format R code.
    sources:
      - "{{.R_SOURCE}}"
      - "{{.VIGNETTES}}"
    deps:
      - build-wrappers
    cmds:
      - Rscript -e
        'devtools::load_all();
        lintr::lint_package();
        styler::style_pkg()'

  lint-and-format-rust:
    internal: true
    desc: Lint and auto-format Rust code.
    sources:
      - "{{.MANIFEST}}"
      - "{{.CARGO_LOCK}}"
      - "{{.RUST_SOURCE}}"
    cmds:
      - cargo clippy --manifest-path {{.MANIFEST}}
      - cargo fmt --manifest-path {{.MANIFEST}}

  release-prep:
    desc: "Prepare for a release. args: VERSION: major, minor, or patch"
    deps:
      - build-all
      - lint-and-format
    cmds:
      - Rscript -e '
        usethis::use_version(which = "{{.VERSION}}");
        usethis::use_cran_comments()'
