name: release-lib
on:
  push:
    tags:
      - "lib-*"
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/release-lib.yml
      - src/rust/**
      - src/Makevars*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  LIB_NAME: libprqlr

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-gnu
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: prep Rust
        working-directory: src/rust
        run: |
          LIB_VERSION="$(cargo metadata --format-version=1 --no-deps | jq --raw-output '.packages[0].version')"
          echo "LIB_VERSION=${LIB_VERSION}" >>"$GITHUB_ENV"
          rustup target add ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src/rust -> target"
          shared-key: build

      - name: prep for musl
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: prep for arm64 Linux
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo 'CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc' >>"$GITHUB_ENV"
          echo 'CC=aarch64-linux-gnu-gcc' >>"$GITHUB_ENV"

      - name: build lib
        env:
          TARGET: ${{ matrix.target }}
          PRQLR_PROFILE: release
        working-directory: src
        run: |
          LIB_PATH="$(pwd)/rust/target/${TARGET}/${PRQLR_PROFILE}/${LIB_NAME}.a"
          ARTIFACT_NAME="${LIB_NAME}-${LIB_VERSION}-${TARGET}.tar.gz"
          make -f Makevars${{ runner.os == 'Windows' && '.win' || '' }} "${LIB_PATH}"
          tar -czf "../${ARTIFACT_NAME}" -C "rust/target/${TARGET}/${PRQLR_PROFILE}" "${LIB_NAME}.a"
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >>"$GITHUB_ENV"

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ env.ARTIFACT_NAME }}
